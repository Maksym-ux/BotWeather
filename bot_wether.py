import asyncio
import aiohttp
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message
from dotenv import load_dotenv
import os

from telegram.constants import BOT_API_VERSION

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")  # –∑–∞–º—ñ–Ω–∏ —Å–≤–æ—ó–º —Ç–æ–∫–µ–Ω–æ–º
WEATHER_API_KEY = ("BOT_WEATHER_API_KEY")  # –≤—Å—Ç–∞–≤ —Å–≤—ñ–π API –∫–ª—é—á –∑ openweathermap.org

bot = Bot(token=TOKEN)
dp = Dispatcher()


async def get_weather(city: str):
    url = f"http://maps.openweathermap.org/maps/2.0/weather/?appid={WEATHER_API_KEY}&units=metric&lang=ua"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            if resp.status == 200:
                data = await resp.json()
                name = data["name"]
                temp = data["main"]["temp"]
                feels_like = data["main"]["feels_like"]
                weather = data["weather"][0]["description"]
                wind = data["wind"]["speed"]
                return f"üåç –ú—ñ—Å—Ç–æ: {name}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\nü§î –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {feels_like}¬∞C\nüå• –ü–æ–≥–æ–¥–∞: {weather}\nüí® –í—ñ—Ç–µ—Ä: {wind} –º/—Å"
            else:
                return None


@dp.message(Command("start"))
async def start_cmd(message: Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞, —ñ —è —Å–∫–∞–∂—É —Ç–æ–±—ñ –ø–æ–≥–æ–¥—É üå§")


@dp.message()
async def handle_city(message: Message):
    city = message.text.strip()
    weather_info = await get_weather(city)
    if weather_info:
        await message.answer(weather_info)
    else:
        await message.answer("‚ö†Ô∏è –ú—ñ—Å—Ç–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –ø–æ–º–∏–ª–∫–∞ API. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑.")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
